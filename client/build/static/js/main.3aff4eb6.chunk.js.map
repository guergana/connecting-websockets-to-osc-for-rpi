{"version":3,"sources":["components/Home/index.js","data/keys.js","components/Key/index.js","components/Keyboard/index.js","components/Slider/index.js","components/ShaderParams/index.js","App.js","serviceWorker.js","index.js"],"names":["ShaderParams","className","to","React","Component","keysData","letter","display","color","size","FN","socket","io","Key","handleClick","handleFNToggle","props","emit","on","data","isFNOn","this","keySettings","displayMode","onClick","style","backgroundColor","data-letter","undefined","fontSize","padding","Keyboard","state","setState","Fragment","map","key","Slider","values","onChangeHandler","paramName","value","class","alignItems","height","flexDirection","direction","step","min","max","onChange","renderTrack","children","onMouseDown","onTouchStart","flexGrow","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","justifyContent","marginTop","marginBottom","id","toFixed","sliders","slider","shader","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3aff4eb6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.scss\";\n\nclass ShaderParams extends React.Component {\n  render() {\n    return (\n      <div className={`container home`}>\n        <h1>\n          Welcome to <span className=\"rainbow\">r_e_m_o_t_e</span>,\n          <span className=\"smaller\">\n            <br />a web extension for interfacing with{\" \"}\n            <span className=\"recur\">r_e_c_u_r</span> via OSC.\n          </span>\n        </h1>\n\n        <h2>** Choose your fighter **</h2>\n        <ul className=\"interface-list\">\n          <li>\n            <Link to=\"/keyboard\">Keyboard</Link>\n          </li>\n          <li>\n            <Link to=\"/shaderparams\">ShaderParams</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ShaderParams;\n","const keysData = [\n  {\n    letter: \"a\",\n    display: \"<\",\n    color: \"red\"\n  },\n  {\n    letter: \"b\",\n    display: \">\",\n    color: \"red\"\n  },\n  {\n    letter: \"c\",\n    display: \"■\",\n    color: \"red\"\n  },\n  {\n    letter: \"d\",\n    size: \"double\",\n    display: \"→\",\n    color: \"cyan\"\n  },\n  {\n    letter: \"e\",\n    display: \"[\",\n    FN: \"CLR [\"\n  },\n  {\n    letter: \"f\",\n    display: \"]\",\n    FN: \"CLR ]\"\n  },\n  {\n    letter: \"g\",\n    display: \"⭗\",\n    FN: \"REC\"\n  },\n  {\n    letter: \"h\",\n    display: \"DSPLY\",\n    color: \"magenta\"\n  },\n  {\n    letter: \"i\",\n    display: \"FN\",\n    color: \"yellow\"\n  },\n  {\n    letter: \"j\",\n    display: \"0\",\n    FN: \"PRV BNK\"\n  },\n  {\n    letter: \"k\",\n    display: \"1\",\n    FN: \"NXT BNK\"\n  },\n  {\n    letter: \"l\",\n    display: \"2\",\n    FN: \"CLR BNK\"\n  },\n  {\n    letter: \"m\",\n    display: \"3\"\n  },\n  {\n    letter: \"n\",\n    display: \"4\"\n  },\n  {\n    letter: \"o\",\n    display: \"5\",\n    FN: \"MIRROR\"\n  },\n  {\n    letter: \"p\",\n    display: \"6\",\n    FN: \"SHADER\"\n  },\n  {\n    letter: \"q\",\n    display: \"7\",\n    FN: \"FRAMES\"\n  },\n  {\n    letter: \"r\",\n    display: \"8\",\n    FN: \"FEEDBCK\"\n  },\n  {\n    letter: \"s\",\n    display: \"9\",\n    FN: \"SHUTDWN\"\n  }\n];\n\nexport default keysData;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport io from \"socket.io-client\";\nimport \"./Key.scss\";\n\nlet socket = io();\n\nclass Key extends React.Component {\n  static propTypes = {\n    keySettings: PropTypes.object.isRequired,\n    handleFNToggle: PropTypes.func\n  };\n\n  componentDidMount() {\n    //add eventlistener\n    socket.on(\"keyPress\", function(data) {\n      socket.emit(\"keyPress\", data);\n    });\n  }\n\n  handleClick = letter => {\n    const { handleFNToggle } = this.props;\n    socket.emit(\"keyPress\", letter);\n    if (letter === \"i\") {\n      handleFNToggle();\n    }\n  };\n\n  render() {\n    const { isFNOn } = this.props;\n    const { keySettings, displayMode } = this.props;\n    const { letter, display, size = \"\", color, FN } = keySettings;\n\n    return (\n      <div\n        className={`keyWrapper ${size}`}\n        onClick={() => this.handleClick(letter)}\n      >\n        <div\n          className=\"key disable-selection\"\n          style={{\n            backgroundColor: isFNOn && display === \"FN\" ? \"#888\" : null\n          }}\n          data-letter={letter}\n        >\n          <span\n            style={{\n              color: displayMode === \"dev\" ? undefined : color,\n              fontSize:\n                isFNOn && FN\n                  ? \"2.4vw\"\n                  : /*size === \"double\" ? \"3em\" :*/ \"3.0vw\",\n              padding: display === \"DSPLY\" ? \"8px 0\" : null\n            }}\n          >\n            {displayMode === \"dev\" ? letter : isFNOn && FN ? FN : display}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Key;\n","import React from \"react\";\nimport keysData from \"data/keys\";\nimport Key from \"components/Key\";\n\nclass Keyboard extends React.Component {\n  state = {\n    isFNOn: false,\n    displayMode: \"normal\"\n  };\n\n  handleFNToggle = () => {\n    const { isFNOn } = this.state;\n    this.setState({ isFNOn: !isFNOn, displayMode: \"FN\" });\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const { isFNOn, displayMode } = this.state;\n    return (\n      <React.Fragment>\n        {keysData.map(key => {\n          return (\n            <Key\n              key={key.letter}\n              displayMode={displayMode}\n              keySettings={key}\n              isFNOn={isFNOn}\n              handleFNToggle={this.handleFNToggle}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from \"react\";\nimport io from \"socket.io-client\";\nimport PropTypes from \"prop-types\";\nimport { Range, getTrackBackground } from \"react-range\";\n\nconst STEP = 0.01;\nconst MIN = 0;\nconst MAX = 1;\n\nlet socket = io();\nconst Direction = \"to top\";\n\nclass Slider extends React.Component {\n  static propTypes = {\n    shader: PropTypes.string.isRequired,\n    paramName: PropTypes.string.isRequired\n  };\n\n  state = { values: [0.0] };\n\n  onChangeHandler = values => {\n    const { paramName } = this.props;\n    this.setState({ values });\n    socket.emit(\"sliderChange\", { paramName, value: values[0] });\n  };\n\n  componentDidMount() {\n    //add eventlistener\n    socket.on(\"sliderChange\", function(data) {\n      socket.emit(\"sliderChange\", data);\n    });\n  }\n\n  render() {\n    return (\n      <div\n        class=\"slider\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"100%\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Range\n          direction={Direction}\n          values={this.state.values}\n          step={STEP}\n          min={MIN}\n          max={MAX}\n          onChange={values => this.onChangeHandler(values)}\n          renderTrack={({ props, children }) => (\n            <div\n              onMouseDown={props.onMouseDown}\n              onTouchStart={props.onTouchStart}\n              style={{\n                ...props.style,\n                flexGrow: 1,\n                width: \"36px\",\n                display: \"flex\",\n                height: \"60vh\"\n              }}\n            >\n              <div\n                ref={props.ref}\n                style={{\n                  width: \"10px\",\n                  height: \"100%\",\n                  borderRadius: \"4px\",\n                  background: getTrackBackground({\n                    values: this.state.values,\n                    colors: [\"yellow\", \"#ccc\"],\n                    min: MIN,\n                    max: MAX,\n                    direction: Direction\n                  }),\n                  alignSelf: \"center\"\n                }}\n              >\n                {children}\n              </div>\n            </div>\n          )}\n          renderThumb={({ props, isDragged }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: \"60px\",\n                width: \"60px\",\n                borderRadius: \"30px\",\n                backgroundColor: \"gray\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <div\n                style={{\n                  width: \"16px\",\n                  height: \"5px\",\n                  backgroundColor: isDragged ? \"yellow\" : \"#CCC\"\n                }}\n              />\n            </div>\n          )}\n        />\n        {\n          <output\n            style={{ marginTop: \"50px\", marginBottom: \"50px\", width: \"56px\" }}\n            id=\"output\"\n          >\n            {this.state.values[0].toFixed(2)}\n          </output>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React from \"react\";\nimport \"./ShaderParams.scss\";\nimport Slider from \"components/Slider\";\n\nconst sliders = [\n  \"shaderparam0\",\n  \"shaderparam1\",\n  \"shaderparam2\",\n  \"shaderparam3\"\n];\n\nclass ShaderParams extends React.Component {\n  static propTypes = {};\n\n  render() {\n    return (\n      <div className={`container shaderparams`}>\n        <h3>ShaderParams</h3>\n        <div class=\"slider-panel\">\n          {sliders.map(slider => (\n            <Slider key={slider} shader=\"shader0\" paramName={slider} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShaderParams;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//absolute imports possible thanks to NODE_PATH var in .env file\nimport Home from \"components/Home\";\nimport Keyboard from \"components/Keyboard\";\nimport ShaderParams from \"components/ShaderParams\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/keyboard\">\n            <Keyboard />\n          </Route>\n          <Route path=\"/shaderparams\">\n            <ShaderParams />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}