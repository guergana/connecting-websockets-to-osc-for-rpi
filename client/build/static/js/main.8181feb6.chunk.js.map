{"version":3,"sources":["components/Home/index.js","data/keys.js","components/Key/index.js","components/Keyboard/index.js","components/Slider/index.js","components/ShaderParams/index.js","App.js","serviceWorker.js","index.js"],"names":["ShaderParams","className","to","React","Component","keysData","letter","display","color","size","FN","socket","io","Key","handleClick","handleFNToggle","props","emit","on","data","isFNOn","this","keySettings","displayMode","onClick","style","backgroundColor","data-letter","undefined","fontSize","padding","Keyboard","state","setState","Fragment","map","key","Slider","values","onChangeHandler","paramName","value","class","alignItems","height","flexDirection","direction","step","min","max","onChange","renderTrack","children","onMouseDown","onTouchStart","flexGrow","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","justifyContent","marginTop","marginBottom","id","toFixed","sliders","slider","shader","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8181feb6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nclass ShaderParams extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={`container home`}>\r\n        <h1>\r\n          Welcome to <span className=\"rainbow\">f_u_n_k_y___n_a_m_e</span>,\r\n          <span className=\"smaller\">\r\n            <br />a web extension for interfacing with{\" \"}\r\n            <span className=\"recur\">r_e_c_u_r</span> via OSC.\r\n          </span>\r\n        </h1>\r\n\r\n        <h2>** Choose your fighter **</h2>\r\n        <ul className=\"interface-list\">\r\n          <li>\r\n            <Link to=\"/keyboard\">Keyboard</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/shaderparams\">ShaderParams</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShaderParams;\r\n","const keysData = [\r\n  {\r\n    letter: \"a\",\r\n    display: \"<\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    letter: \"b\",\r\n    display: \">\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    letter: \"c\",\r\n    display: \"■\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    letter: \"d\",\r\n    size: \"double\",\r\n    display: \"→\",\r\n    color: \"cyan\"\r\n  },\r\n  {\r\n    letter: \"e\",\r\n    display: \"[\",\r\n    FN: \"CLR [\"\r\n  },\r\n  {\r\n    letter: \"f\",\r\n    display: \"]\",\r\n    FN: \"CLR ]\"\r\n  },\r\n  {\r\n    letter: \"g\",\r\n    display: \"⭗\",\r\n    FN: \"REC\"\r\n  },\r\n  {\r\n    letter: \"h\",\r\n    display: \"DSPLY\",\r\n    color: \"magenta\"\r\n  },\r\n  {\r\n    letter: \"i\",\r\n    display: \"FN\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    letter: \"j\",\r\n    display: \"0\",\r\n    FN: \"PRV BNK\"\r\n  },\r\n  {\r\n    letter: \"k\",\r\n    display: \"1\",\r\n    FN: \"NXT BNK\"\r\n  },\r\n  {\r\n    letter: \"l\",\r\n    display: \"2\",\r\n    FN: \"CLR BNK\"\r\n  },\r\n  {\r\n    letter: \"m\",\r\n    display: \"3\"\r\n  },\r\n  {\r\n    letter: \"n\",\r\n    display: \"4\"\r\n  },\r\n  {\r\n    letter: \"o\",\r\n    display: \"5\",\r\n    FN: \"MIRROR\"\r\n  },\r\n  {\r\n    letter: \"p\",\r\n    display: \"6\",\r\n    FN: \"SHADER\"\r\n  },\r\n  {\r\n    letter: \"q\",\r\n    display: \"7\",\r\n    FN: \"FRAMES\"\r\n  },\r\n  {\r\n    letter: \"r\",\r\n    display: \"8\",\r\n    FN: \"FEEDBCK\"\r\n  },\r\n  {\r\n    letter: \"s\",\r\n    display: \"9\",\r\n    FN: \"SHUTDWN\"\r\n  }\r\n];\r\n\r\nexport default keysData;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Key.css\";\r\n\r\nlet socket = io();\r\n\r\nclass Key extends React.Component {\r\n  static propTypes = {\r\n    keySettings: PropTypes.object.isRequired,\r\n    handleFNToggle: PropTypes.func\r\n  };\r\n\r\n  componentDidMount() {\r\n    //add eventlistener\r\n    socket.on(\"keyPress\", function(data) {\r\n      socket.emit(\"keyPress\", data);\r\n    });\r\n  }\r\n\r\n  handleClick = letter => {\r\n    const { handleFNToggle } = this.props;\r\n    socket.emit(\"keyPress\", letter);\r\n    if (letter === \"i\") {\r\n      handleFNToggle();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isFNOn } = this.props;\r\n    const { keySettings, displayMode } = this.props;\r\n    const { letter, display, size = \"\", color, FN } = keySettings;\r\n\r\n    return (\r\n      <div\r\n        className={`keyWrapper ${size}`}\r\n        onClick={() => this.handleClick(letter)}\r\n      >\r\n        <div\r\n          className=\"key disable-selection\"\r\n          style={{\r\n            backgroundColor: isFNOn && display === \"FN\" ? \"#888\" : null\r\n          }}\r\n          data-letter={letter}\r\n        >\r\n          <span\r\n            style={{\r\n              color: displayMode === \"dev\" ? undefined : color,\r\n              fontSize:\r\n                isFNOn && FN\r\n                  ? \"2.4vw\"\r\n                  : /*size === \"double\" ? \"3em\" :*/ \"3.0vw\",\r\n              padding: display === \"DSPLY\" ? \"8px 0\" : null\r\n            }}\r\n          >\r\n            {displayMode === \"dev\" ? letter : isFNOn && FN ? FN : display}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Key;\r\n","import React from \"react\";\r\nimport keysData from \"data/keys\";\r\nimport Key from \"components/Key\";\r\n\r\nclass Keyboard extends React.Component {\r\n  state = {\r\n    isFNOn: false,\r\n    displayMode: \"normal\"\r\n  };\r\n\r\n  handleFNToggle = () => {\r\n    const { isFNOn } = this.state;\r\n    this.setState({ isFNOn: !isFNOn, displayMode: \"FN\" });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { isFNOn, displayMode } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {keysData.map(key => {\r\n          return (\r\n            <Key\r\n              key={key.letter}\r\n              displayMode={displayMode}\r\n              keySettings={key}\r\n              isFNOn={isFNOn}\r\n              handleFNToggle={this.handleFNToggle}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import React from \"react\";\r\nimport \"./Slider.css\";\r\nimport io from \"socket.io-client\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Range, getTrackBackground } from \"react-range\";\r\n\r\nconst STEP = 0.01;\r\nconst MIN = 0;\r\nconst MAX = 1;\r\n\r\nlet socket = io();\r\nconst Direction = \"to top\";\r\n\r\nclass Slider extends React.Component {\r\n  static propTypes = {\r\n    shader: PropTypes.string.isRequired,\r\n    paramName: PropTypes.string.isRequired\r\n  };\r\n\r\n  state = { values: [0.0] };\r\n\r\n  onChangeHandler = values => {\r\n    const { paramName } = this.props;\r\n    this.setState({ values });\r\n    socket.emit(\"sliderChange\", { paramName, value: values[0] });\r\n  };\r\n\r\n  componentDidMount() {\r\n    //add eventlistener\r\n    socket.on(\"sliderChange\", function(data) {\r\n      socket.emit(\"sliderChange\", data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        class=\"slider\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <Range\r\n          direction={Direction}\r\n          values={this.state.values}\r\n          step={STEP}\r\n          min={MIN}\r\n          max={MAX}\r\n          onChange={values => this.onChangeHandler(values)}\r\n          renderTrack={({ props, children }) => (\r\n            <div\r\n              onMouseDown={props.onMouseDown}\r\n              onTouchStart={props.onTouchStart}\r\n              style={{\r\n                ...props.style,\r\n                flexGrow: 1,\r\n                width: \"36px\",\r\n                display: \"flex\",\r\n                height: \"60vh\"\r\n              }}\r\n            >\r\n              <div\r\n                ref={props.ref}\r\n                style={{\r\n                  width: \"10px\",\r\n                  height: \"100%\",\r\n                  borderRadius: \"4px\",\r\n                  background: getTrackBackground({\r\n                    values: this.state.values,\r\n                    colors: [\"yellow\", \"#ccc\"],\r\n                    min: MIN,\r\n                    max: MAX,\r\n                    direction: Direction\r\n                  }),\r\n                  alignSelf: \"center\"\r\n                }}\r\n              >\r\n                {children}\r\n              </div>\r\n            </div>\r\n          )}\r\n          renderThumb={({ props, isDragged }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                ...props.style,\r\n                height: \"60px\",\r\n                width: \"60px\",\r\n                borderRadius: \"30px\",\r\n                backgroundColor: \"gray\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"16px\",\r\n                  height: \"5px\",\r\n                  backgroundColor: isDragged ? \"yellow\" : \"#CCC\"\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        />\r\n        {\r\n          <output\r\n            style={{ marginTop: \"50px\", marginBottom: \"50px\", width: \"56px\" }}\r\n            id=\"output\"\r\n          >\r\n            {this.state.values[0].toFixed(2)}\r\n          </output>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./ShaderParams.css\";\r\nimport Slider from \"components/Slider\";\r\n\r\nconst sliders = [\r\n  \"shaderparam0\",\r\n  \"shaderparam1\",\r\n  \"shaderparam2\",\r\n  \"shaderparam3\"\r\n];\r\n\r\nclass ShaderParams extends React.Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className={`container shaderparams`}>\r\n        <h3>ShaderParams</h3>\r\n        <div class=\"slider-panel\">\r\n          {sliders.map(slider => (\r\n            <Slider key={slider} shader=\"shader0\" paramName={slider} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShaderParams;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//absolute imports possible thanks to NODE_PATH var in .env file\nimport Home from \"components/Home\";\nimport Keyboard from \"components/Keyboard\";\nimport ShaderParams from \"components/ShaderParams\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/keyboard\">\n            <Keyboard />\n          </Route>\n          <Route path=\"/shaderparams\">\n            <ShaderParams />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}